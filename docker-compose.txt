Docker compose

YAML
===========================================
docker run -d --name=radis radis

$ docker run -d --name=db postgres

$ docker run -d --name=vote -p5000:80 voting-app

$ docker run -d --name=result -p5001:80 result-app

$ docker run -d --name=worker worker

$ docker run -d --name=vote -p5000:80 --link redis:redis voting-app

$ docker run -d --name=result -p5001:80 --link db:db result-app

$ docker run -d --name=worker --link db:db --link redis:redis worker

docker-compose.yml

$ docker-compose up

===========================================
$ docker run mmumshad/simple-webapp

$ docker run mongodb

$ docker run radis:alpine

$ docker run ansible

$ docker-compose.yml
version:2
service:
web:
image: "mmumshad/simple-webapp"
database:
image: "mongodb"
messaging: 
image: "radis:alpine"
orchestration:
image: "ansible"

$ docker-compose up

$ sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
$ sudo chmod +x /usr/local/bin/docker-compose
$ docker-compose --version

=========================================
QUE - Create a docker-compose.yml file under the directory /root/clickcounter. Once done, run docker-compose up.



The compose file should have the exact specification as follows -

redis service specification - Image name should be redis:alpine.
clickcounter service specification - Image name should be kodekloud/click-counter, app is run on port 5000 and expose it on the host port 8085 in the compose file.

ANS

$ cat > docker-compose.yml
services:
  redis:
    image: redis:alpine
  clickcounter:
    image: kodekloud/click-counter
    ports:
    - 8085:5000
version: '3.0'
ctrl+c

docker-compose up -d